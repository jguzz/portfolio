{"version":3,"sources":["components/profile.jpeg","components/style/Body.js","components/style/Nav.js","components/style/Wrapper.js","components/style/NavLink.js","components/style/Profile.js","components/Home.js","components/Projects.js","components/Articles.js","components/Resume.js","components/App.js","serviceWorker.js","config/theme.js","index.js"],"names":["module","exports","Body","styled","div","props","theme","background","Nav","primary","Wrapper","NavLink","Link","secondary","Profile","img","HomeContainer","ContactMe","Heading","Bio","p","Home","h1","a","Projects","ArticleTitle","h4","ArticleContainer","Title","Container","TitleContainer","Articles","ResumeContainer","Resume","App","src","profPic","alt","to","path","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7167b44f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.81b911e1.jpeg\";","import styled from \"styled-components\";\n\nconst Body = styled.div`\n  display: flex;\n  flex: 82%;\n  background-color: ${props => props.theme.background};\n\n\n`;\n\nexport default Body;\n","import styled from \"styled-components\";\n\nconst Nav = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-content: space-around;\n  flex: 18%;\n  background-color: ${props => props.theme.primary};\n  text-align: center;\n  height: 100vh;\n  position: static;\n`;\n\nexport default Nav;\n","import styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n\tdisplay:flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  justify-content: space-around;\n  align-items: stretch;\n \n`;\n\nexport default Wrapper;\n","import styled from 'styled-components'\nimport { Link } from \"react-router-dom\";\n\nconst NavLink = styled(Link)`\n\tcolor: white;\n\ttext-decoration-line: none;\n\tfont-size: 18px;\n\n\t&:hover {\n\t\tcolor: ${props => props.theme.secondary};\n\t}\n`;\n\nexport default NavLink","import styled from 'styled-components'\n\nconst Profile = styled.img`\n\theight: 12em;\n\twidth: 12em;\n\tborder-radius: 50%;\n\tmargin-left: auto; \n\tmargin-right: auto;\n\tflex: 1/5fr;\n`;\n\nexport default Profile;","// Displays information to welcome the user, and inform them about me.\n\n// ==== Imports ====\nimport React from \"react\";\nimport styled from \"styled-components\";\n\n// ==== CSS Styling ====\nconst HomeContainer = styled.div`\n  text-align: center;\n  margin: auto;\n  display: grid;\n  grid-template-rows: 1fr 4fr 1fr;\n  height: 100vh;\n  align-items: center;\n`;\n\nconst ContactMe = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n`;\n\nconst Heading = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Bio = styled.p``;\n\n// ==== HOME ====\nfunction Home() {\n  return (\n    <HomeContainer>\n      {/* ME */}\n      <Heading>\n        <h1>Joseph A Guzzardo</h1>\n        <h4>Full Stack Web Developer</h4>\n        <h5>React | Javacript | Ruby on Rails | CSS | HTML | Java</h5>\n      </Heading>\n      {/* BIO */}\n      <Bio>Telling them all about me</Bio>\n      {/* Links to contact me */}\n      <ContactMe>\n        <p>Github</p>\n        <p>Linkedin</p>\n        <p>Email</p>\n        <p>Medium</p>\n      </ContactMe>\n    </HomeContainer>\n  );\n}\n\nexport default Home;\n","// Displays all the main projects I have with video demos\n\n// ==== IMPORTS ====\nimport React from \"react\";\nimport styled from \"styled-components\";\n\n// ==== CSS STYLING ====\nconst Heading = styled.h1`\n  color: ${(props) => props.theme.primary};\n`;\n\nconst ProjectContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  align-items: center;\n  align-content: center;\n  width: 100vh;\n  flex: 82%;\n`;\n\nconst ProjLink = styled.a`\n  flex-grow: 1;\n  color: ${(props) => props.theme.primary};\n  padding-right: 2em;\n  padding-left: 2em;\n`;\n\nconst ProjectLinks = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-evenly;\n  align-items: center;\n  align-content: center;\n`;\n\n// ==== PROJECTS ====\n// Shows all the web apps I've created, with links to relevant sites\\\nfunction Projects() {\n  return (\n    // Arandged using flexbox\n    <ProjectContainer>\n      <Heading>Projects</Heading>\n      <h4>Plantstory</h4>\n      <ProjectLinks>\n        <ProjLink href=\"\">Front-End</ProjLink>\n        <ProjLink href=\"\">Back-End</ProjLink>\n        <ProjLink href=\"\">Video Demo</ProjLink>\n      </ProjectLinks>\n      <p>Here is a bunch of information about my project</p>\n      <h4>Youtube Clone</h4>\n      <ProjectLinks>\n        <ProjLink href=\"\">Front-End</ProjLink>\n        <ProjLink href=\"\">Back-End</ProjLink>\n        <ProjLink href=\"\">Video Demo</ProjLink>\n      </ProjectLinks>\n      <p>Here is a bunch of information about my project</p>\n      <h4>Movie Review Website</h4>\n      <ProjectLinks>\n        <ProjLink href=\"\">Front-End</ProjLink>\n        <ProjLink href=\"\">Back-End</ProjLink>\n        <ProjLink href=\"\">Video Demo</ProjLink>\n      </ProjectLinks>\n      <p>Here is a bunch of information about my project</p>\n    </ProjectContainer>\n  );\n}\n\nexport default Projects;\n","// ==== Where I will keep my articles I publish ====\n\n// ==== Imports ====\nimport React from \"react\";\nimport styled from \"styled-components\";\n\n// ==== CSS STYLING ====\nconst ArticleTitle = styled.h4`\n  text-align: center;\n`;\nconst ArticleContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-template-rows: 1fr 1fr;\n  height: 30em;\n`;\nconst Title = styled.h1`\n  color: ${(props) => props.theme.primary};\n  text-align: center;\n`;\nconst ArticleImage = styled.img``;\nconst Container = styled.div`\n  display: block;\n`;\nconst TitleContainer = styled.div`\n  width: 100vmin;\n  margin: auto;\n`;\n\n// ==== Articles ====\n// Layout with CSS Grid\nfunction Articles() {\n  return (\n    <>\n      <Container>\n        <TitleContainer>\n          <Title>Articles I've Written</Title>\n        </TitleContainer>\n        <ArticleContainer>\n          <ArticleTitle>\n            Begginers Guide to Setting Up and Using React-Bootstrap\n          </ArticleTitle>\n          <ArticleTitle>How to make a Login With Bulma</ArticleTitle>\n          <ArticleTitle>Into to Ant Design</ArticleTitle>\n          <ArticleTitle>Into to Phaser for Javascript</ArticleTitle>\n          <ArticleTitle>\n            Creating the Original Pong using Javascript\n          </ArticleTitle>\n        </ArticleContainer>\n      </Container>\n    </>\n  );\n}\n\nexport default Articles;\n","// Route for displaying my resume\n\n// ==== IMPORTS ====\nimport React from \"react\";\nimport styled from \"styled-components\";\n\n// ==== CSS STYLING ====\nconst Title = styled.h1`\n  color: ${(props) => props.theme.primary};\n`;\nconst ResumeContainer = styled.div`\n  margin: auto;\n`;\n\n// ==== RESUME ====\n// Displays a PDF of my Resume.\nfunction Resume() {\n  return (\n    <>\n      <ResumeContainer>\n        <Title>Check Out my Resume</Title>\n      </ResumeContainer>\n    </>\n  );\n}\n\nexport default Resume;\n","// Main componenet holding most of the websites layout.\n\n// ==== IMPORTS ====\nimport React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n// Styled Components\nimport styled from \"styled-components\";\nimport Body from \"./style/Body\";\nimport Nav from \"./style/Nav\";\nimport Wrapper from \"./style/Wrapper\";\nimport NavLink from \"./style/NavLink\";\nimport Profile from \"./style/Profile\";\nimport profPic from \"./profile.jpeg\";\n// React Components\nimport Home from \"./Home\";\nimport Projects from \"./Projects\";\nimport Articles from \"./Articles\";\nimport Resume from \"./Resume\";\n\n// ==== CSS STYLING ====\n// Most styles are imported here... something I wouldn't do again for a project so small.\nconst Heading = styled.h1`\n  color: ${(props) => props.theme.primary};\n`;\n\n// ==== APP ====\n// Has the side nav bar, and the routes for what will display in the body on the right.\nfunction App() {\n  return (\n    <>\n      <Wrapper>\n        {/* Side Nav */}\n        <Nav>\n          <Profile\n            src={profPic}\n            alt=\"Photo of Joseph Guzzardo Softare Engineer\"\n          />\n\n          <NavLink to=\"/portfolio/home\">About Me / Home</NavLink>\n          <NavLink to=\"/portfolio/projects\">Projects</NavLink>\n          <NavLink to=\"/portfolio/articles\">Articles</NavLink>\n          <NavLink to=\"/portfolio/resume\">Resume</NavLink>\n        </Nav>\n        {/* Main Body that will display content with router */}\n        <Body>\n          <Switch>\n            <Route path=\"/portfolio/home\" render={() => <Home />} />\n            <Route path=\"/portfolio/projects\" render={() => <Projects />} />\n            <Route path=\"/portfolio/articles\" render={() => <Articles />} />\n            <Route path=\"/portfolio/resume\" render={() => <Resume />} />\n          </Switch>\n        </Body>\n      </Wrapper>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const primary = \"#508556\";\nexport const background = \"#e6e8e6\";\nexport const secondary = \"#6e0a0a\"","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { ThemeProvider } from \"styled-components\";\nimport * as theme from \"./config/theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}